# Software Modules

High-Performance Computing (HPC) environments support a wide range of software applications, libraries, and compilers. Efficiently managing these resources can be challenging due to differing versions, configurations, and dependencies, which may lead to conflicts if not properly handled. 

To mitigate this, HPC systems utilize a **module system**. Software packages are installed in non-standard locations to avoid clashes with system-wide paths. Instead of altering global settings, users dynamically configure their environments using modules. With simple commands, they can load, unload, and switch between different software versions, ensuring a clean, consistent, and personalized computing environment.

!!! Tip "Software Stack"
    Software packages in HPC environments are organized into sets known as **`stacks`**. <mark>Each stack contains a collection of software built with a consistent set of dependencies, ensuring compatibility within the stack.</mark> This approach allows multiple versions of the same software to coexist, each within its own well-defined environment. While switching between versions of a specific package can be more complex under this scheme, the recommended solution is to load the appropriate stack in a separate SSH session. This ensures a clean and conflict-free environment tailored to the specific version requirements.

## Module Commands

| Command | Description|
| ------- | ---------- |
| <pre><code>module list</code></pre> | Display the software you have loaded in your environment. |
| <pre><code>module avail</code></pre> | Display all installed modules under current stack matching the `<module_name>`.|
| <pre><code>module spider &#60;module_name&#62; </code></pre> | Display all installed modules available matching the `<module_name>`.|
| <pre><code>module show &#60;module_name&#62; </code></pre>  | Displays system variables that are set/modified when loading module `<module_name>`. This can be helpful for locating the executables that are provided by the module.|
|<pre><code>module load &#60;module_name&#62;</code></pre>|Load a software module in your environment|
|<pre><code>module unload &#60;module_name&#62;</code></pre>|Unload a specific software package from your environment|
|<pre><code>module reset</code></pre>| Configure back to default set |
|<pre><code>module purge</code></pre>| Unload all software modules from your environment|
|<pre><code>module help</code></pre>| Display a help menu for the module command|

## Examples

```bash title="List current modules"

dooyoon@argon-login-5 ~> module list

Currently Loaded Modules:
  1) stack/2021.1              4) expat/2.2.10_gcc-9.3.0    7) libxml2/2.9.10_gcc-9.3.0  10) libffi/3.3_gcc-9.3.0      13) readline/8.1_gcc-9.3.0            16) xz/5.2.5_gcc-9.3.0
  2) bzip2/1.0.8_gcc-9.3.0     5) gdbm/1.19_gcc-9.3.0       8) tar/1.34_gcc-9.3.0        11) ncurses/6.2_gcc-9.3.0     14) sqlite/3.35.3_gcc-9.3.0           17) zlib/1.2.11_gcc-9.3.0
  3) libbsd/0.10.0_gcc-9.3.0   6) libiconv/1.16_gcc-9.3.0   9) gettext/0.21_gcc-9.3.0    12) openssl/1.1.1k_gcc-9.3.0  15) util-linux-uuid/2.36.2_gcc-9.3.0  18) python/3.8.8_gcc-9.3.0

```

``` bash title="Find the desired Python version"

dooyoon@argon-login-5 ~> module spider python

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  python:
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     Versions:
        python/2.7.13_parallel_studio-2017.1
        python/2.7.13
        ...
        python/3.10.8_gcc-9.5.0-dev
        python/3.10.8_gcc-9.5.0
        python/3.10.8_intel-2021.7.1-dev
        python/3.10.8_intel-2021.7.1
        ...



dooyoon@argon-login-5 ~> module spider python/3.10.8_gcc-9.5.0

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  python: python/3.10.8_gcc-9.5.0
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    You will need to load all module(s) on any one of the lines below before the "python/3.10.8_gcc-9.5.0" module is available to load.

      stack/2022.2
      stack/2022.2-base_arch
 
    Help:
      The Python programming language.

```

!!! tip
    To load Python 3.10.8, you need to load ```stack/2022.2```. 
